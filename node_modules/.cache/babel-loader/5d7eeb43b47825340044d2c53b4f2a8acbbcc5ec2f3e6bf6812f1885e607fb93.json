{"ast":null,"code":"var _jsxFileName = \"/Users/namseonghun/Desktop/git/GitHub/glot/src/pages/Writing/Writing.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport dayjs, { Dayjs } from 'dayjs';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport { useReactToPrint } from 'react-to-print';\nimport { useRecoilState } from 'recoil';\nimport { LoginState, WritingTitle, WritingContent, WritingId, Sentence, SentenceList, SentenceType, Subscribed } from '../../recoil/Atom';\nimport Header from '../../components/Header';\nimport SideBar from '../../components/Writing/SideBar';\nimport Backdrop from '../../components/Modal/Backdrop';\nimport OptionModal from '../../components/Modal/WritingOptionModal';\nimport ExampleModal from '../../components/Modal/WritingExampleModal';\nimport VersionNotice from '../../components/Modal/VersionNoticeModal';\nimport SaveNoticeModal from '../../components/Modal/SaveNoticeModal';\nimport WritingSaveApi from '../../services/WritingSave';\nimport WritingDetailApi from '../../services/WritingDetail';\nimport WritingListApi from '../../services/WritingList';\nimport open from '../../asset/open.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Writing() {\n  _s();\n  const [isLogin, setIsLogin] = useRecoilState(LoginState); // 로그인 여부\n  const [isSideBarOpen, setIsSideBarOpen] = useState(true); // 사이드바 제어\n  const [showSaveNoticeModal, setShowSaveNoticeModal] = useState(false); // 작문 저장 여부(모달창 제어)\n  const [isSlashTyped, setIsSlashTyped] = useState(false); // '/' 문자 입력 여부(모달창 제어)\n  const [isVersionNotified, setIsVersionNotified] = useState(false); // 버전 업데이트 알림 여부(모달창 제어)\n  const [selectOption, setSelectOption] = useRecoilState(SentenceType); // 선택한 작문 옵션\n  const [isOptionSelected, setIsOptionSelected] = useState(false); // 작문 옵션 선택 여부(모달창 제어)\n  const [selectOptionExample, setSelectOptionExample] = useRecoilState(SentenceList); // 선택한 작문 옵션의 예시 문장 배열\n  const [selectExample, setSelectExample] = useRecoilState(Sentence); // 선택한 작문 옵션의 예시 문장\n  const [writingTitle, setWritingTitle] = useRecoilState(WritingTitle); // 작문 제목\n  const [writingContent, setWritingContent] = useRecoilState(WritingContent); // 작문 내용\n  const [writingId, setWritingId] = useRecoilState(WritingId); // 작문 고유 id\n  const [writingList, setWritingList] = useState([]); // 작문 리스트\n  const [writingListUpdate, setWritingListUpdate] = useState(false); // 사이드바 작문 리스트 업데이트\n  const [coordinates, setCoordinates] = useState({\n    x: 0,\n    y: 0\n  }); // '/' 문자의 위치\n  const [isSubscribed, setIsSubscribed] = useRecoilState(Subscribed); // 구독 여부\n\n  const writingAreaRef = useRef(null);\n  const openSideBar = () => {\n    setIsSideBarOpen(true);\n  };\n\n  //작문보드 전체 조회(리스트)\n  useEffect(() => {\n    WritingListApi().then(response => {\n      setWritingList(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [writingListUpdate]);\n\n  // 화면 크기가 변경될 때 사이드바 상태 업데이트\n  useEffect(() => {\n    // 화면 크기가 변경될 때 사이드바 상태 업데이트\n    const handleResize = () => {\n      if (window.innerWidth < 900) {\n        setIsSideBarOpen(false);\n      } else {\n        setIsSideBarOpen(true);\n      }\n    };\n\n    // 초기 로드 시 한 번 실행\n    handleResize();\n\n    // resize 이벤트 리스너 등록\n    window.addEventListener('resize', handleResize);\n\n    // 컴포넌트 언마운트 시 이벤트 리스너 제거\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  //작문보드 단건 조회(제목,내용)\n  useEffect(() => {\n    if (writingId) {\n      WritingDetailApi(writingId).then(response => {\n        setWritingTitle(response.title);\n        setWritingContent(response.content);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [writingId]);\n\n  // ContentInput에서 '/' 문자 입력 감지 후 위치 계산\n  const handleContentChange = e => {\n    const content = e.target.value;\n    if (e.target.value === '/') {\n      setIsSlashTyped(false);\n    } else if (e.target.value.includes('/')) {\n      if (writingAreaRef.current) {\n        const rect = writingAreaRef.current.getBoundingClientRect();\n        const indexOfSlash = content.indexOf('/'); // '/' 문자의 첫 번째 인덱스\n        const linesBeforeSlash = content.substr(0, indexOfSlash).split('\\n'); // '/' 이전의 줄을 나눠서 배열로 저장\n        const previousLineLength = linesBeforeSlash[linesBeforeSlash.length - 1].length; // 이전 줄의 길이\n\n        const lineIndexOfSlash = linesBeforeSlash.length; // '/' 문자가 있는 줄의 인덱스\n        if (lineIndexOfSlash > 0) {\n          setCoordinates({\n            x: rect.left + 50 + previousLineLength * 13.5,\n            y: rect.top + 100 + lineIndexOfSlash * 20\n          });\n        } else {\n          setCoordinates({\n            x: rect.left + 50 + previousLineLength * 13.5,\n            y: rect.top + 100\n          });\n        }\n      }\n      setIsSlashTyped(true);\n    } else {\n      setIsSlashTyped(false);\n    }\n    setWritingContent(e.target.value);\n  };\n\n  // 작문 옵션 선택 시 작문 내용에 추가\n  useEffect(() => {\n    // 작문 내용에서 마지막의 '/' 문자를 제거\n    const updatedContent = writingContent.endsWith('/') ? writingContent.slice(0, -1) : writingContent;\n    // 선택한 옵션 문장을 추가\n    const newContent = updatedContent + selectExample;\n    setWritingContent(newContent);\n    setSelectOption('');\n    setSelectOptionExample('');\n  }, [selectExample]);\n\n  // 작문 내용이 500자 이상일 때 버전 업데이트 알림\n  useEffect(() => {\n    if (!isSubscribed) {\n      const newContent = writingContent;\n      const byteCount = new TextEncoder().encode(newContent).length;\n      if (byteCount > 500) {\n        setIsVersionNotified(true);\n      }\n    }\n    if (writingContent.trim() !== '' || writingTitle.trim() !== '') {\n      const preventClose = e => {\n        e.preventDefault();\n        e.returnValue = '';\n      };\n      window.addEventListener('beforeunload', preventClose);\n      return () => {\n        window.removeEventListener('beforeunload', preventClose);\n      };\n    }\n  }, [writingContent]);\n  const converToPdf = async () => {\n    const canvas = await html2canvas(document.getElementById('html'));\n    console.dir(writingTitle);\n    console.dir(writingContent);\n    const imgData = canvas.toDataURL('image/png');\n    const pdf = new jsPDF('p', 'px', 'a4');\n    const pageWidth = pdf.internal.pageSize.getWidth();\n    const pageHeight = pdf.internal.pageSize.getHeight();\n    const imgProps = pdf.getImageProperties(imgData);\n    const pdfWidth = pageWidth;\n    const pdfHeight = imgProps.height * pdfWidth / imgProps.width;\n    let heightLeft = pdfHeight;\n    let position = 0;\n    pdf.addImage(imgData, 'PNG', 0, position, pdfWidth, pdfHeight);\n    heightLeft -= pageHeight;\n    while (heightLeft >= 0) {\n      position = heightLeft - pdfHeight;\n      pdf.addPage();\n      pdf.addImage(imgData, 'PNG', 0, position, pdfWidth, pdfHeight);\n      heightLeft -= pageHeight;\n    }\n    pdf.save(`${writingTitle}_${dayjs().format('YYYYMMDDHHmmss')}.pdf`);\n  };\n\n  //인쇄\n  const onClickPrint = useReactToPrint({\n    content: () => writingAreaRef.current,\n    documentTitle: `${writingTitle}_${dayjs().format('YYYYMMDDHHmmss')}`\n  });\n\n  // 작문 저장\n  const onClickSave = () => {\n    if (isSubscribed) {\n      if (writingTitle || writingContent) {\n        if (!writingId) {\n          // 작문을 처음 저장하는 경우 writingId가 없으므로 빈 문자열을 전달\n          WritingSaveApi(writingId, writingTitle, writingContent).then(response => {\n            setWritingId(response.data); // 저장하면 작문 고유 id를 받아옴\n            setWritingListUpdate(!writingListUpdate); // 사이드바 작문 리스트 업데이트\n            alert('작문이 저장되었습니다.');\n          }).catch(error => {\n            console.log(error);\n          });\n        } else {\n          // 작문을 수정하는 경우\n          WritingSaveApi(writingId, writingTitle, writingContent).then(response => {\n            setWritingListUpdate(!writingListUpdate); // 사이드바 작문 리스트 업데이트\n            alert('수정이 완료되었습니다.');\n          }).catch(error => {\n            console.log(error);\n          });\n        }\n      }\n    } else {\n      alert('무료 사용자는 작문을 저장할 수 없습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), isSideBarOpen ? /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {\n        isSideBarOpen: isSideBarOpen,\n        setIsSideBarOpen: setIsSideBarOpen,\n        writingList: writingList,\n        setWritingList: setWritingList,\n        writingListUpdate: writingListUpdate,\n        setWritingListUpdate: setWritingListUpdate,\n        onClickPrint: onClickPrint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InnerContainer, {\n        isSideBarOpen: isSideBarOpen,\n        children: [/*#__PURE__*/_jsxDEV(WritingArea, {\n          ref: writingAreaRef,\n          id: \"html\",\n          isSideBarOpen: isSideBarOpen,\n          children: [/*#__PURE__*/_jsxDEV(TitleArea, {\n            children: /*#__PURE__*/_jsxDEV(TitleInput, {\n              type: \"text\",\n              placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: writingTitle,\n              onChange: e => setWritingTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ContentArea, {\n            children: /*#__PURE__*/_jsxDEV(ContentInput, {\n              placeholder: \"\\uBB38\\uC7A5\\uC744 \\uC785\\uB825\\uD558\\uC5EC \\uC791\\uBB38\\uC744 \\uC2DC\\uC791\\uD574\\uBCF4\\uC138\\uC694!\",\n              value: writingContent,\n              onChange: handleContentChange,\n              disabled: isVersionNotified\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ButtonArea, {\n          children: /*#__PURE__*/_jsxDEV(SaveButton, {\n            onClick: onClickSave,\n            children: \"\\uC800\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(InnerContainer, {\n        isSideBarOpen: isSideBarOpen,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: openSideBar,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: open,\n            alt: \"open\",\n            style: {\n              width: '14px',\n              height: '14px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(WritingArea, {\n          ref: writingAreaRef,\n          id: \"html\",\n          isSideBarOpen: isSideBarOpen,\n          children: [/*#__PURE__*/_jsxDEV(TitleArea, {\n            children: /*#__PURE__*/_jsxDEV(TitleInput, {\n              type: \"text\",\n              placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: writingTitle,\n              onChange: e => setWritingTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ContentArea, {\n            children: /*#__PURE__*/_jsxDEV(ContentInput, {\n              placeholder: \"\\uBB38\\uC7A5\\uC744 \\uC785\\uB825\\uD558\\uC5EC \\uC791\\uBB38\\uC744 \\uC2DC\\uC791\\uD574\\uBCF4\\uC138\\uC694!\",\n              value: writingContent,\n              onChange: handleContentChange,\n              disabled: isVersionNotified\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ButtonArea, {\n          children: /*#__PURE__*/_jsxDEV(SaveButton, {\n            onClick: onClickSave,\n            children: \"\\uC800\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }, this), isSlashTyped && /*#__PURE__*/_jsxDEV(OptionModal, {\n      setIsSlashTyped: setIsSlashTyped,\n      setIsOptionSelected: setIsOptionSelected,\n      coordinates: coordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 31\n    }, this), isOptionSelected && /*#__PURE__*/_jsxDEV(ExampleModal, {\n      setIsSlashTyped: setIsSlashTyped,\n      setIsOptionSelected: setIsOptionSelected,\n      writingContent: writingContent,\n      setWritingContent: setWritingContent,\n      coordinates: coordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 35\n    }, this), isVersionNotified && /*#__PURE__*/_jsxDEV(VersionNotice, {\n      setIsVersionNotified: setIsVersionNotified\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 36\n    }, this), isVersionNotified && /*#__PURE__*/_jsxDEV(Backdrop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 36\n    }, this), showSaveNoticeModal && /*#__PURE__*/_jsxDEV(SaveNoticeModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 37\n    }, this), showSaveNoticeModal && /*#__PURE__*/_jsxDEV(Backdrop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 9\n  }, this);\n}\n_s(Writing, \"t3O3h9HTB41MT4Cc+Db4X+BS/6Q=\", false, function () {\n  return [useRecoilState, useRecoilState, useRecoilState, useRecoilState, useRecoilState, useRecoilState, useRecoilState, useRecoilState, useReactToPrint];\n});\n_c = Writing;\nconst Container = styled.div`\n    width: 100%;\n    height: 100vh;\n    background-color: #F2F3F5;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n_c2 = Container;\nconst Content = styled.div`\n    width: 100%;\n    height: calc(100% - 80px); /* 80은 헤더의 높이 */\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n`;\n_c3 = Content;\nconst InnerContainer = styled.div`\n    height: 100%;\n    width: ${props => props.isSideBarOpen ? 'calc(100% - 230px)' : '100%'};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: #f2f3f5;\n    animation: 0.3s ease-in-out;\n`;\n_c4 = InnerContainer;\nconst Button = styled.button`\n    width: 30px;\n    height: 30px;\n    position: absolute;\n    left: 10px;\n    top: 74px;\n    border-radius: 50%;\n    border: none;\n    font-size: 20px;\n    cursor: pointer;\n    margin-top: 20px;\n    background-color: #F2F4F5;\n    &:hover {\n        background-color: #E5E7E9;\n    }\n`;\n_c5 = Button;\nconst WritingArea = styled.div`\n    width: 598px;\n    height: 100%;\n    background-color: #FFFFFF;\n    border: none;\n    display: flex;\n    flex-direction: column;\n    padding: 48px;\n    margin-top: 24px;\n    overflow: auto;\n    animation: 0.3s ease-in-out;\n`;\n_c6 = WritingArea;\nconst TitleArea = styled.div`\n    width: 100%;\n    height: 50px;\n    outline: none;\n    margin-bottom: 20px;\n`;\n_c7 = TitleArea;\nconst TitleInput = styled.input`\n    width: 100%;\n    height: 100%;\n    border: none;\n    outline: none;\n    font-size: 30px;\n    font-weight: 600;\n    &::placeholder {\n        color: rgba(111, 112, 113, 1);\n    }\n`;\n_c8 = TitleInput;\nconst ContentArea = styled.div`\n    width: 100%;\n    height: 100%;\n`;\n_c9 = ContentArea;\nconst ContentInput = styled.textarea`  \n    width: 100%;\n    height: 100%;\n    border: none;\n    outline: none;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 28.8px;\n    resize: none;\n    white-space: pre-line;\n    ::placeholder {\n        color: rgba(111, 112, 113, 1);\n    }\n`;\n_c10 = ContentInput;\nconst ButtonArea = styled.div`\n    width: 694px;\n    height: 80px;\n    background-color: #FFFFFF;\n    border-top: 1px solid rgba(239, 239, 239, 1);\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: center;\n\n`;\n_c11 = ButtonArea;\nconst SaveButton = styled.button`\n    width: 100px;\n    height: 40px;\n    border: none;\n    border-radius: 36px;\n    background-color: #3290FF;\n    color: #FFFFFF;\n    font-size: 16px;\n    font-weight: 600;\n    cursor: pointer;\n    margin-right: 10px;\n`;\n_c12 = SaveButton;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"Writing\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"InnerContainer\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"WritingArea\");\n$RefreshReg$(_c7, \"TitleArea\");\n$RefreshReg$(_c8, \"TitleInput\");\n$RefreshReg$(_c9, \"ContentArea\");\n$RefreshReg$(_c10, \"ContentInput\");\n$RefreshReg$(_c11, \"ButtonArea\");\n$RefreshReg$(_c12, \"SaveButton\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","keyframes","dayjs","Dayjs","html2canvas","jsPDF","useReactToPrint","useRecoilState","LoginState","WritingTitle","WritingContent","WritingId","Sentence","SentenceList","SentenceType","Subscribed","Header","SideBar","Backdrop","OptionModal","ExampleModal","VersionNotice","SaveNoticeModal","WritingSaveApi","WritingDetailApi","WritingListApi","open","jsxDEV","_jsxDEV","Writing","_s","isLogin","setIsLogin","isSideBarOpen","setIsSideBarOpen","showSaveNoticeModal","setShowSaveNoticeModal","isSlashTyped","setIsSlashTyped","isVersionNotified","setIsVersionNotified","selectOption","setSelectOption","isOptionSelected","setIsOptionSelected","selectOptionExample","setSelectOptionExample","selectExample","setSelectExample","writingTitle","setWritingTitle","writingContent","setWritingContent","writingId","setWritingId","writingList","setWritingList","writingListUpdate","setWritingListUpdate","coordinates","setCoordinates","x","y","isSubscribed","setIsSubscribed","writingAreaRef","openSideBar","then","response","catch","error","console","log","handleResize","window","innerWidth","addEventListener","removeEventListener","title","content","handleContentChange","e","target","value","includes","current","rect","getBoundingClientRect","indexOfSlash","indexOf","linesBeforeSlash","substr","split","previousLineLength","length","lineIndexOfSlash","left","top","updatedContent","endsWith","slice","newContent","byteCount","TextEncoder","encode","trim","preventClose","preventDefault","returnValue","converToPdf","canvas","document","getElementById","dir","imgData","toDataURL","pdf","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","imgProps","getImageProperties","pdfWidth","pdfHeight","height","width","heightLeft","position","addImage","addPage","save","format","onClickPrint","documentTitle","onClickSave","data","alert","Container","children","fileName","_jsxFileName","lineNumber","columnNumber","Content","InnerContainer","WritingArea","ref","id","TitleArea","TitleInput","type","placeholder","onChange","ContentArea","ContentInput","disabled","ButtonArea","SaveButton","onClick","Button","src","alt","style","_c","div","_c2","_c3","props","_c4","button","_c5","_c6","_c7","input","_c8","_c9","textarea","_c10","_c11","_c12","$RefreshReg$"],"sources":["/Users/namseonghun/Desktop/git/GitHub/glot/src/pages/Writing/Writing.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled, {keyframes} from 'styled-components';\nimport dayjs, { Dayjs } from 'dayjs';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport { useReactToPrint } from 'react-to-print';\n\nimport { useRecoilState } from 'recoil';\nimport { LoginState, WritingTitle, WritingContent, WritingId, Sentence, SentenceList, SentenceType, Subscribed } from '../../recoil/Atom';\n\nimport Header from '../../components/Header';\nimport SideBar from '../../components/Writing/SideBar';\nimport Backdrop from '../../components/Modal/Backdrop';\nimport OptionModal from '../../components/Modal/WritingOptionModal';\nimport ExampleModal from '../../components/Modal/WritingExampleModal';\nimport VersionNotice from '../../components/Modal/VersionNoticeModal';\nimport SaveNoticeModal from '../../components/Modal/SaveNoticeModal';\n\nimport WritingSaveApi from '../../services/WritingSave';\nimport WritingDetailApi from '../../services/WritingDetail';\nimport WritingListApi from '../../services/WritingList';\n\nimport open from '../../asset/open.png';\n\nexport default function Writing() {\n\n    const [isLogin, setIsLogin] = useRecoilState(LoginState); // 로그인 여부\n    const [isSideBarOpen, setIsSideBarOpen] = useState(true); // 사이드바 제어\n    const [showSaveNoticeModal, setShowSaveNoticeModal] = useState(false); // 작문 저장 여부(모달창 제어)\n    const [isSlashTyped, setIsSlashTyped] = useState(false); // '/' 문자 입력 여부(모달창 제어)\n    const [isVersionNotified, setIsVersionNotified] = useState(false); // 버전 업데이트 알림 여부(모달창 제어)\n    const [selectOption, setSelectOption] = useRecoilState(SentenceType); // 선택한 작문 옵션\n    const [isOptionSelected, setIsOptionSelected] = useState(false); // 작문 옵션 선택 여부(모달창 제어)\n    const [selectOptionExample, setSelectOptionExample] = useRecoilState(SentenceList); // 선택한 작문 옵션의 예시 문장 배열\n    const [selectExample, setSelectExample] = useRecoilState(Sentence); // 선택한 작문 옵션의 예시 문장\n    const [writingTitle, setWritingTitle] = useRecoilState(WritingTitle); // 작문 제목\n    const [writingContent, setWritingContent] = useRecoilState(WritingContent); // 작문 내용\n    const [writingId, setWritingId] = useRecoilState(WritingId); // 작문 고유 id\n    const [writingList, setWritingList] = useState([]) // 작문 리스트\n    const [writingListUpdate, setWritingListUpdate] = useState(false) // 사이드바 작문 리스트 업데이트\n    const [coordinates, setCoordinates] = useState({ x: 0, y: 0 }); // '/' 문자의 위치\n    const [isSubscribed, setIsSubscribed] = useRecoilState(Subscribed); // 구독 여부\n\n    const writingAreaRef = useRef(null);\n\n    const openSideBar = () => {\n        setIsSideBarOpen(true);\n    };\n\n    //작문보드 전체 조회(리스트)\n    useEffect(() => {\n        WritingListApi()\n            .then((response) => {\n                setWritingList(response);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, [writingListUpdate]);\n    \n    // 화면 크기가 변경될 때 사이드바 상태 업데이트\n    useEffect(() => {\n        // 화면 크기가 변경될 때 사이드바 상태 업데이트\n        const handleResize = () => {\n            if (window.innerWidth < 900) {\n                setIsSideBarOpen(false);\n            }\n            else {\n                setIsSideBarOpen(true);\n            }\n        };\n\n        // 초기 로드 시 한 번 실행\n        handleResize();\n\n        // resize 이벤트 리스너 등록\n        window.addEventListener('resize', handleResize);\n\n        // 컴포넌트 언마운트 시 이벤트 리스너 제거\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    //작문보드 단건 조회(제목,내용)\n    useEffect(() => {\n        if (writingId) {\n            WritingDetailApi(writingId)\n                .then((response) => {\n                    setWritingTitle(response.title);\n                    setWritingContent(response.content);\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        }\n    }, [writingId]);\n\n    // ContentInput에서 '/' 문자 입력 감지 후 위치 계산\n    const handleContentChange = (e) => {\n        const content = e.target.value;\n\n        if (e.target.value === '/') {\n            setIsSlashTyped(false);\n        } else if (e.target.value.includes('/')) {\n            if (writingAreaRef.current) {\n                const rect = writingAreaRef.current.getBoundingClientRect();\n                const indexOfSlash = content.indexOf('/'); // '/' 문자의 첫 번째 인덱스\n                const linesBeforeSlash = content.substr(0, indexOfSlash).split('\\n'); // '/' 이전의 줄을 나눠서 배열로 저장\n                const previousLineLength = linesBeforeSlash[linesBeforeSlash.length - 1].length; // 이전 줄의 길이\n        \n                const lineIndexOfSlash = linesBeforeSlash.length; // '/' 문자가 있는 줄의 인덱스\n                if(lineIndexOfSlash > 0) {\n                    setCoordinates({ x: rect.left + 50 + previousLineLength * 13.5, y: rect.top + 100 + lineIndexOfSlash * 20 });\n                }\n                else {\n                    setCoordinates({ x: rect.left + 50 + previousLineLength * 13.5, y: rect.top + 100 });\n                }\n            }\n            setIsSlashTyped(true);\n        } else {\n            setIsSlashTyped(false);\n        }\n        setWritingContent(e.target.value);\n    };\n\n    // 작문 옵션 선택 시 작문 내용에 추가\n    useEffect(() => {\n        // 작문 내용에서 마지막의 '/' 문자를 제거\n        const updatedContent = writingContent.endsWith('/') ? writingContent.slice(0, -1) : writingContent;\n        // 선택한 옵션 문장을 추가\n        const newContent = updatedContent + selectExample;\n        setWritingContent(newContent);\n        setSelectOption('');\n        setSelectOptionExample('');\n    }, [selectExample]);\n\n\n    // 작문 내용이 500자 이상일 때 버전 업데이트 알림\n    useEffect(() => {\n        if (!isSubscribed) { \n            const newContent = writingContent;\n            const byteCount = new TextEncoder().encode(newContent).length;\n            if(byteCount > 500) {\n                setIsVersionNotified(true);\n            }\n        }\n\n        if (writingContent.trim() !== '' || writingTitle.trim() !== '') {\n            const preventClose = (e) => {\n                e.preventDefault();\n                e.returnValue = '';\n            };\n    \n            window.addEventListener('beforeunload', preventClose);\n    \n            return () => {\n                window.removeEventListener('beforeunload', preventClose);\n            };\n        }\n    }, [writingContent]);\n\n    const converToPdf = async () => {\n        const canvas = await html2canvas(document.getElementById('html'));\n        console.dir(writingTitle);\n        console.dir(writingContent);\n        const imgData = canvas.toDataURL('image/png');\n        const pdf = new jsPDF('p', 'px', 'a4');\n        const pageWidth = pdf.internal.pageSize.getWidth();\n        const pageHeight = pdf.internal.pageSize.getHeight();\n\n        const imgProps = pdf.getImageProperties(imgData);\n        const pdfWidth = pageWidth;\n        const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n        let heightLeft = pdfHeight;\n        let position = 0;\n\n        pdf.addImage(imgData, 'PNG', 0, position, pdfWidth, pdfHeight);\n        heightLeft -= pageHeight;\n\n        while (heightLeft >= 0) {\n            position = heightLeft - pdfHeight;\n            pdf.addPage();\n            pdf.addImage(imgData, 'PNG', 0, position, pdfWidth, pdfHeight);\n            heightLeft -= pageHeight;\n        }\n\n        pdf.save(`${writingTitle}_${dayjs().format('YYYYMMDDHHmmss')}.pdf`);\n    }\n\n    //인쇄\n    const onClickPrint = useReactToPrint({\n        content: () => writingAreaRef.current,\n        documentTitle: `${writingTitle}_${dayjs().format('YYYYMMDDHHmmss')}`,\n    });\n\n    // 작문 저장\n    const onClickSave = () => {\n        if(isSubscribed) {\n            if(writingTitle || writingContent) {\n                if (!writingId) {\n                    // 작문을 처음 저장하는 경우 writingId가 없으므로 빈 문자열을 전달\n                    WritingSaveApi(writingId, writingTitle, writingContent)\n                        .then((response) => {\n                            setWritingId(response.data);  // 저장하면 작문 고유 id를 받아옴\n                            setWritingListUpdate(!writingListUpdate); // 사이드바 작문 리스트 업데이트\n                            alert('작문이 저장되었습니다.');\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        });\n                }\n                else {\n                    // 작문을 수정하는 경우\n                    WritingSaveApi(writingId, writingTitle, writingContent)\n                        .then((response) => {\n                            setWritingListUpdate(!writingListUpdate); // 사이드바 작문 리스트 업데이트\n                            alert('수정이 완료되었습니다.')\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        });\n                }\n            }\n        }\n        else {\n            alert('무료 사용자는 작문을 저장할 수 없습니다.')\n        }\n    };\n\n    return (\n        <Container>\n            <Header />\n            {isSideBarOpen ? (\n                <Content>\n                    <SideBar\n                        isSideBarOpen={isSideBarOpen}\n                        setIsSideBarOpen={setIsSideBarOpen} \n                        writingList={writingList}\n                        setWritingList={setWritingList}\n                        writingListUpdate={writingListUpdate}\n                        setWritingListUpdate={setWritingListUpdate}\n                        onClickPrint={onClickPrint}\n                    />\n                    <InnerContainer isSideBarOpen={isSideBarOpen}>\n                        <WritingArea ref={writingAreaRef} id='html' isSideBarOpen={isSideBarOpen}>\n                            <TitleArea>\n                                <TitleInput\n                                    type=\"text\"\n                                    placeholder=\"제목을 입력해주세요\"\n                                    value={writingTitle}\n                                    onChange={(e) => setWritingTitle(e.target.value)}\n                                />\n                            </TitleArea>\n                            <ContentArea>\n                                <ContentInput\n                                    placeholder=\"문장을 입력하여 작문을 시작해보세요!\"\n                                    value={writingContent}\n                                    onChange={handleContentChange}\n                                    disabled={isVersionNotified}\n                                />\n                            </ContentArea>\n                        </WritingArea>\n                        <ButtonArea>\n                            <SaveButton onClick={onClickSave}>저장</SaveButton> \n                        </ButtonArea>\n                    </InnerContainer>\n                </Content>\n            ) : (\n                <Content>\n                    <InnerContainer isSideBarOpen={isSideBarOpen}>\n                        <Button onClick={openSideBar}>\n                            <img \n                                src={open} \n                                alt='open' \n                                style={{\n                                    width: '14px',\n                                    height: '14px',\n                                }}\n                            />\n                        </Button>\n                        <WritingArea ref={writingAreaRef} id='html' isSideBarOpen={isSideBarOpen}>\n                            <TitleArea>\n                                <TitleInput\n                                    type=\"text\"\n                                    placeholder=\"제목을 입력해주세요\"\n                                    value={writingTitle}\n                                    onChange={(e) => setWritingTitle(e.target.value)}\n                                />\n                            </TitleArea>\n                            <ContentArea>\n                                <ContentInput\n                                    placeholder=\"문장을 입력하여 작문을 시작해보세요!\"\n                                    value={writingContent}\n                                    onChange={handleContentChange}\n                                    disabled={isVersionNotified}\n                                />\n                            </ContentArea>\n                        </WritingArea>\n                        <ButtonArea>\n                            <SaveButton onClick={onClickSave}>저장</SaveButton> \n                        </ButtonArea>\n                    </InnerContainer>\n                </Content>\n            )}\n            {isSlashTyped && (<OptionModal setIsSlashTyped={setIsSlashTyped} setIsOptionSelected={setIsOptionSelected} coordinates={coordinates}/>)}\n            {isOptionSelected && (<ExampleModal setIsSlashTyped={setIsSlashTyped} setIsOptionSelected={setIsOptionSelected} writingContent={writingContent} setWritingContent={setWritingContent} coordinates={coordinates}/>)}\n            {isVersionNotified && (<VersionNotice setIsVersionNotified={setIsVersionNotified}/>)}\n            {isVersionNotified && (<Backdrop />)}\n            {showSaveNoticeModal && <SaveNoticeModal />}\n            {showSaveNoticeModal && <Backdrop />}\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100vh;\n    background-color: #F2F3F5;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst Content = styled.div`\n    width: 100%;\n    height: calc(100% - 80px); /* 80은 헤더의 높이 */\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst InnerContainer = styled.div`\n    height: 100%;\n    width: ${props => (props.isSideBarOpen ? 'calc(100% - 230px)' : '100%')};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: #f2f3f5;\n    animation: 0.3s ease-in-out;\n`;\n\nconst Button = styled.button`\n    width: 30px;\n    height: 30px;\n    position: absolute;\n    left: 10px;\n    top: 74px;\n    border-radius: 50%;\n    border: none;\n    font-size: 20px;\n    cursor: pointer;\n    margin-top: 20px;\n    background-color: #F2F4F5;\n    &:hover {\n        background-color: #E5E7E9;\n    }\n`;\n\nconst WritingArea = styled.div`\n    width: 598px;\n    height: 100%;\n    background-color: #FFFFFF;\n    border: none;\n    display: flex;\n    flex-direction: column;\n    padding: 48px;\n    margin-top: 24px;\n    overflow: auto;\n    animation: 0.3s ease-in-out;\n`;\n\nconst TitleArea = styled.div`\n    width: 100%;\n    height: 50px;\n    outline: none;\n    margin-bottom: 20px;\n`;\n\nconst TitleInput = styled.input`\n    width: 100%;\n    height: 100%;\n    border: none;\n    outline: none;\n    font-size: 30px;\n    font-weight: 600;\n    &::placeholder {\n        color: rgba(111, 112, 113, 1);\n    }\n`;\n\nconst ContentArea = styled.div`\n    width: 100%;\n    height: 100%;\n`; \n\nconst ContentInput = styled.textarea`  \n    width: 100%;\n    height: 100%;\n    border: none;\n    outline: none;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 28.8px;\n    resize: none;\n    white-space: pre-line;\n    ::placeholder {\n        color: rgba(111, 112, 113, 1);\n    }\n`;\n\nconst ButtonArea = styled.div`\n    width: 694px;\n    height: 80px;\n    background-color: #FFFFFF;\n    border-top: 1px solid rgba(239, 239, 239, 1);\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: center;\n\n`;\n\nconst SaveButton = styled.button`\n    width: 100px;\n    height: 40px;\n    border: none;\n    border-radius: 36px;\n    background-color: #3290FF;\n    color: #FFFFFF;\n    font-size: 16px;\n    font-weight: 600;\n    cursor: pointer;\n    margin-right: 10px;\n`;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}