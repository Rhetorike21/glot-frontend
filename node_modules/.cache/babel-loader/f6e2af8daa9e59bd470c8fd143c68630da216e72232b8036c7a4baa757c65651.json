{"ast":null,"code":"// import { useCookies } from \"react-cookie\";\n// import axios from \"axios\";\n// import { BASE_URL } from \"../constants/Url\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const useAxiosWithAuth = () => {\n//   const [cookies, setCookie, removeCookie] = useCookies([\"token\"]);\n//   const navigate = useNavigate();\n\n//   const createAxiosInstance = () => {\n//     return axios.create({\n//       baseURL: BASE_URL,\n//     });\n//   };\n\n//   let axiosInstance = createAxiosInstance();\n\n//   axiosInstance.interceptors.response.use(\n//     (response) => response,\n//     async (error) => {\n//       const statusCode = error.response?.status;\n//       if (statusCode === 401) {\n//         try {\n//             const refreshResponse = await axios.post(\n//             `${BASE_URL}/auth/reissue`,\n//             { \n//                 refresh: cookies.token,\n//                 auth : localStorage.getItem('token')\n//             }\n//             );\n//             console.log(refreshResponse);\n//             const newToken = refreshResponse.data.accessToken;\n//             localStorage.setItem(\"token\", newToken);\n//             axiosInstance = createAxiosInstance();\n//             error.config.headers[\"Authorization\"] = `Bearer ${newToken}`;\n//             return axiosInstance(error.config);\n//         } catch (refreshError) {\n//           removeCookie(\"token\");\n//           navigate(\"/\");\n//           return Promise.reject(refreshError);\n//         }\n//       }\n//       return Promise.reject(error);\n//     }\n//   );\n\n//   return axiosInstance;\n// };\n\n// export default useAxiosWithAuth;\n\nimport axios from 'axios';\nimport { useCookies } from 'react-cookie';\nimport { BASE_URL } from '../constants/Url';\nconst TokenReissueApi = async (access, refresh) => {\n  try {\n    const response = await axios.post(`${BASE_URL}/auth/reissue`, {\n      headers: {\n        auth: access,\n        refresh: refresh\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n_c = TokenReissueApi;\nexport default TokenReissueApi;\nvar _c;\n$RefreshReg$(_c, \"TokenReissueApi\");","map":{"version":3,"names":["axios","useCookies","BASE_URL","TokenReissueApi","access","refresh","response","post","headers","auth","data","error","console","log","_c","$RefreshReg$"],"sources":["/Users/namseonghun/Desktop/git/GitHub/glot/src/services/TokenReissue.js"],"sourcesContent":["// import { useCookies } from \"react-cookie\";\n// import axios from \"axios\";\n// import { BASE_URL } from \"../constants/Url\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const useAxiosWithAuth = () => {\n//   const [cookies, setCookie, removeCookie] = useCookies([\"token\"]);\n//   const navigate = useNavigate();\n\n//   const createAxiosInstance = () => {\n//     return axios.create({\n//       baseURL: BASE_URL,\n//     });\n//   };\n\n//   let axiosInstance = createAxiosInstance();\n\n//   axiosInstance.interceptors.response.use(\n//     (response) => response,\n//     async (error) => {\n//       const statusCode = error.response?.status;\n//       if (statusCode === 401) {\n//         try {\n//             const refreshResponse = await axios.post(\n//             `${BASE_URL}/auth/reissue`,\n//             { \n//                 refresh: cookies.token,\n//                 auth : localStorage.getItem('token')\n//             }\n//             );\n//             console.log(refreshResponse);\n//             const newToken = refreshResponse.data.accessToken;\n//             localStorage.setItem(\"token\", newToken);\n//             axiosInstance = createAxiosInstance();\n//             error.config.headers[\"Authorization\"] = `Bearer ${newToken}`;\n//             return axiosInstance(error.config);\n//         } catch (refreshError) {\n//           removeCookie(\"token\");\n//           navigate(\"/\");\n//           return Promise.reject(refreshError);\n//         }\n//       }\n//       return Promise.reject(error);\n//     }\n//   );\n\n//   return axiosInstance;\n// };\n\n// export default useAxiosWithAuth;\n\n\nimport axios from 'axios';\nimport { useCookies } from 'react-cookie';\nimport { BASE_URL } from '../constants/Url';\n\nconst TokenReissueApi = async (access, refresh) => {\n    try {\n        const response = await axios.post(\n            `${BASE_URL}/auth/reissue`,\n            {\n                headers: {\n                    auth: access,\n                    refresh: refresh,\n                },\n            },\n        );\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport default TokenReissueApi;"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,MAAMC,eAAe,GAAG,MAAAA,CAAOC,MAAM,EAAEC,OAAO,KAAK;EAC/C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAC5B,GAAEL,QAAS,eAAc,EAC1B;MACIM,OAAO,EAAE;QACLC,IAAI,EAAEL,MAAM;QACZC,OAAO,EAAEA;MACb;IACJ,CACJ,CAAC;IACD,OAAOC,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAAAG,EAAA,GAfKX,eAAe;AAiBrB,eAAeA,eAAe;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}