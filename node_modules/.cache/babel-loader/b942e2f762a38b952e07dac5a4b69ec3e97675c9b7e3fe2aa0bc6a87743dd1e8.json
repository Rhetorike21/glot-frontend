{"ast":null,"code":"import html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nconst makePdf = () => {\n  const converToImg = async () => {\n    // html to imageFile\n    const paper = document.querySelector(\"#writing\");\n    console.log(paper);\n    const canvas = await html2canvas(paper);\n    console.log(canvas);\n    const imageFile = canvas.toDataURL(\"image/png\", 1.0);\n    return imageFile;\n  };\n  const converToPdf = imageFile => {\n    // imageFile to pdf\n\n    const doc = new jsPDF(\"p\", \"mm\", \"a4\");\n    const pageWidth = doc.internal.pageSize.getWidth();\n    const pageHeight = doc.internal.pageSize.getHeight();\n    doc.addImage(imageFile, \"JPEG\", 0, 0, pageWidth, pageHeight);\n    doc.save(\"test.pdf\");\n    window.open(doc.output(\"bloburl\"));\n    const pdf = new File([doc.output(\"blob\")], \"test.pdf\", {\n      type: \"application/pdf\"\n    });\n    return pdf;\n  };\n  return {\n    viewWithPdf: async () => {\n      // html to imageFile\n      const imageFile = await converToImg();\n\n      // imageFile to Pdf\n      const pdf = converToPdf(imageFile);\n    }\n  };\n};\nexport default makePdf;","map":{"version":3,"names":["html2canvas","jsPDF","makePdf","converToImg","paper","document","querySelector","console","log","canvas","imageFile","toDataURL","converToPdf","doc","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","addImage","save","window","open","output","pdf","File","type","viewWithPdf"],"sources":["/Users/namseonghun/Desktop/git/GitHub/glot/src/pages/Writing/Download.js"],"sourcesContent":["import html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\n\n\nconst makePdf = () => {\n    const converToImg = async () => {\n        // html to imageFile\n        const paper = document.querySelector(\"#writing\");\n        console.log(paper)\n        const canvas = await html2canvas(paper);\n        console.log(canvas)\n        const imageFile = canvas.toDataURL(\"image/png\", 1.0);\n\n        return imageFile\n    }\n\n    const converToPdf = (imageFile) => {\n        // imageFile to pdf\n\n        const doc = new jsPDF(\"p\", \"mm\", \"a4\");\n\n        const pageWidth = doc.internal.pageSize.getWidth();\n        const pageHeight = doc.internal.pageSize.getHeight();\n\n        doc.addImage(imageFile, \"JPEG\", 0, 0, pageWidth, pageHeight);\n\n        doc.save(\"test.pdf\")\n\n        window.open(doc.output(\"bloburl\"))\n\n        const pdf = new File([doc.output(\"blob\")], \"test.pdf\", {\n            type: \"application/pdf\",\n        });\n\n        return pdf\n    }\n    \n    return {\n        viewWithPdf: async () => {\n            // html to imageFile\n            const imageFile = await converToImg()\n    \n            // imageFile to Pdf\n            const pdf = converToPdf(imageFile)\n        }\n    }\n}\n\nexport default makePdf;"],"mappings":"AAAA,OAAOA,WAAW,MAAM,aAAa;AACrC,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAClB,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;IAChDC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;IAClB,MAAMK,MAAM,GAAG,MAAMT,WAAW,CAACI,KAAK,CAAC;IACvCG,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;IACnB,MAAMC,SAAS,GAAGD,MAAM,CAACE,SAAS,CAAC,WAAW,EAAE,GAAG,CAAC;IAEpD,OAAOD,SAAS;EACpB,CAAC;EAED,MAAME,WAAW,GAAIF,SAAS,IAAK;IAC/B;;IAEA,MAAMG,GAAG,GAAG,IAAIZ,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;IAEtC,MAAMa,SAAS,GAAGD,GAAG,CAACE,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAC;IAClD,MAAMC,UAAU,GAAGL,GAAG,CAACE,QAAQ,CAACC,QAAQ,CAACG,SAAS,CAAC,CAAC;IAEpDN,GAAG,CAACO,QAAQ,CAACV,SAAS,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAEI,SAAS,EAAEI,UAAU,CAAC;IAE5DL,GAAG,CAACQ,IAAI,CAAC,UAAU,CAAC;IAEpBC,MAAM,CAACC,IAAI,CAACV,GAAG,CAACW,MAAM,CAAC,SAAS,CAAC,CAAC;IAElC,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAACb,GAAG,CAACW,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,UAAU,EAAE;MACnDG,IAAI,EAAE;IACV,CAAC,CAAC;IAEF,OAAOF,GAAG;EACd,CAAC;EAED,OAAO;IACHG,WAAW,EAAE,MAAAA,CAAA,KAAY;MACrB;MACA,MAAMlB,SAAS,GAAG,MAAMP,WAAW,CAAC,CAAC;;MAErC;MACA,MAAMsB,GAAG,GAAGb,WAAW,CAACF,SAAS,CAAC;IACtC;EACJ,CAAC;AACL,CAAC;AAED,eAAeR,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}