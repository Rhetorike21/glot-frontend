{"ast":null,"code":"var _jsxFileName = \"/Users/namseonghun/Desktop/git/GitHub/glot/src/components/Modal/WritingExampleModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useRecoilState } from \"recoil\";\nimport { SentenceList, Sentence, SentenceType } from \"../../recoil/Atom\";\nimport SentenceRecomendApi from \"../../services/Sentence\";\nimport SearchApi from \"../../services/SearchSchool\";\nimport reload from \"../../asset/reload.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WritingExampleModal({\n  coordinates,\n  setIsOptionSelected,\n  writingContent,\n  setWritingContent\n}) {\n  _s();\n  const [sentence, setSentence] = useRecoilState(Sentence);\n  const [sentenceType, setSentenceType] = useRecoilState(SentenceType);\n  const [sentenceList, setSentenceList] = useRecoilState(SentenceList);\n  const content = writingContent.slice(0, -1);\n  const [isLoading, setIsLoading] = useState(true); // 초기에 로딩 상태를 설정\n\n  useEffect(() => {\n    setIsLoading(true); // API 요청이 시작될 때 로딩 상태 설정\n\n    SentenceRecomendApi(content, sentenceType).then(response => {\n      setSentenceList(response.result);\n      setIsLoading(false); // API 응답 후 로딩 상태 해제\n      console.log(response);\n    }).catch(error => {\n      setIsLoading(false); // 에러 발생 시도 로딩 상태 해제\n      console.log(error);\n    });\n  }, []);\n  const onClickOption = e => {\n    // if(sentenceList.length === 0) {\n    //     setSentence('');\n    //     setIsOptionSelected(false);\n    //     return;\n    // }\n    // const option = e.target.innerText;\n    // setSentence(option);\n    // setIsOptionSelected(false);\n    setSentence(e.target.innerText);\n    setIsOptionSelected(false);\n  };\n  const onClickSelfInput = () => {\n    const option = '';\n    setWritingContent(writingContent.slice(0, -1));\n    setSentence(option);\n    setIsOptionSelected(false);\n  };\n  const onClickReload = () => {\n    setIsLoading(true); // API 요청이 시작될 때 로딩 상태 설정\n\n    SentenceRecomendApi(content, sentenceType).then(response => {\n      setSentenceList(response.result);\n      setIsLoading(false); // API 응답 후 로딩 상태 해제\n      console.log(response);\n    }).catch(error => {\n      setIsLoading(false); // 에러 발생 시도 로딩 상태 해제\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ModalWrapper, {\n    coordinates: coordinates,\n    children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"GLOT \\uBB38\\uC7A5 \\uCD94\\uCC9C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickReload,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          src: reload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), \"\\uB2E4\\uB978 \\uBB38\\uC7A5 \\uCD94\\uCC9C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [isLoading ?\n      /*#__PURE__*/\n      // 로딩 중일 때 로딩 메시지 또는 스피너를 표시\n      _jsxDEV(LoadingMessage, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this) : sentenceList && sentenceList.length > 0 && sentenceList.map((sentence, index) => /*#__PURE__*/_jsxDEV(SelectContent, {\n        onClick: onClickOption,\n        children: /*#__PURE__*/_jsxDEV(SelectDescription, {\n          children: sentence\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(SelfInput, {\n        onClick: onClickSelfInput,\n        children: /*#__PURE__*/_jsxDEV(SelfInputBox, {\n          children: \"\\uC9C1\\uC811 \\uC785\\uB825\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(WritingExampleModal, \"CEHGAZxO20UdPeF8gTenki30r1U=\", false, function () {\n  return [useRecoilState, useRecoilState, useRecoilState];\n});\n_c = WritingExampleModal;\n;\nconst ModalWrapper = styled.div`\n    position: absolute;\n    top: ${props => props.coordinates.y}px;\n    left: ${props => props.coordinates.x}px;\n    width: 423px;\n    background-color: #FFFFFF;\n    box-shadow: 0px 2px 14px 0px rgba(70, 71, 57, 0.12);\n    border-radius: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center; \n`;\n_c2 = ModalWrapper;\nconst ModalTitle = styled.div`\n    width: calc(100% - 32px);\n    height: 8px;\n    padding: 16px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid rgba(242, 243, 245, 1);\n`;\n_c3 = ModalTitle;\nconst Title = styled.div`\n    font-size: 14px;\n    font-weight: 600;\n    color: #33B864;\n    display: flex;\n    justify-content: center;\n`;\n_c4 = Title;\nconst Button = styled.button`\n    border: none;\n    background-color: #FFFFFF;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 14px;\n    font-weight: 500;\n    color: #B7B8BA;\n    margin-left: 10px;\n    cursor: pointer;\n`;\n_c5 = Button;\nconst Icon = styled.img`\n    width: 12.19px;\n    height: 12.19px;\n    margin-right: 5px;\n`;\n_c6 = Icon;\nconst ModalContent = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n_c7 = ModalContent;\nconst SelectContent = styled.div`\n    width: calc(100% - 32px);\n    border-bottom: 1px solid rgba(242, 243, 245, 1);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: left;\n    padding: 16px;\n    &:hover {\n        background: rgba(242, 243, 245, 1);\n    }\n`;\n_c8 = SelectContent;\nconst SelectDescription = styled.div`\n    font-size: 13px;\n    font-weight: 400;\n    color: rgba(17, 17, 17, 1);\n    margin-top: 5px;\n`;\n_c9 = SelectDescription;\nconst SelfInput = styled.div`\n    width: 100%;\n    height: 44px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n_c10 = SelfInput;\nconst SelfInputBox = styled.div`\n    width: calc(100% - 32px);\n    height: calc(100% - 32px);\n    padding: 16px;\n    border: none;\n    display: flex;\n    justify-content: left;\n    align-items: center;\n    font-size: 13px;\n    font-weight: 400;\n    color: rgba(17, 17, 17, 1);\n    cursor: pointer;\n    &:hover {\n        background: rgba(242, 243, 245, 1);\n    }\n`;\n_c11 = SelfInputBox;\nconst LoadingMessage = styled.div`\n    font-size: 18px;\n    font-weight: 500;\n    color: #33B864;\n    padding: 20px;\n`;\n_c12 = LoadingMessage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"WritingExampleModal\");\n$RefreshReg$(_c2, \"ModalWrapper\");\n$RefreshReg$(_c3, \"ModalTitle\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"Icon\");\n$RefreshReg$(_c7, \"ModalContent\");\n$RefreshReg$(_c8, \"SelectContent\");\n$RefreshReg$(_c9, \"SelectDescription\");\n$RefreshReg$(_c10, \"SelfInput\");\n$RefreshReg$(_c11, \"SelfInputBox\");\n$RefreshReg$(_c12, \"LoadingMessage\");","map":{"version":3,"names":["React","useState","useEffect","styled","useRecoilState","SentenceList","Sentence","SentenceType","SentenceRecomendApi","SearchApi","reload","jsxDEV","_jsxDEV","WritingExampleModal","coordinates","setIsOptionSelected","writingContent","setWritingContent","_s","sentence","setSentence","sentenceType","setSentenceType","sentenceList","setSentenceList","content","slice","isLoading","setIsLoading","then","response","result","console","log","catch","error","onClickOption","e","target","innerText","onClickSelfInput","option","onClickReload","ModalWrapper","children","ModalTitle","Title","fileName","_jsxFileName","lineNumber","columnNumber","Button","onClick","Icon","src","ModalContent","LoadingMessage","length","map","index","SelectContent","SelectDescription","SelfInput","SelfInputBox","_c","div","props","y","x","_c2","_c3","_c4","button","_c5","img","_c6","_c7","_c8","_c9","_c10","_c11","_c12","$RefreshReg$"],"sources":["/Users/namseonghun/Desktop/git/GitHub/glot/src/components/Modal/WritingExampleModal.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport styled from \"styled-components\";\n\nimport { useRecoilState } from \"recoil\";\nimport { SentenceList, Sentence, SentenceType } from \"../../recoil/Atom\";\n\nimport SentenceRecomendApi from \"../../services/Sentence\";\nimport SearchApi from \"../../services/SearchSchool\";\n\nimport reload from \"../../asset/reload.png\";\n\nexport default function WritingExampleModal( {coordinates, setIsOptionSelected , writingContent, setWritingContent}) {\n    const [sentence, setSentence] = useRecoilState(Sentence);\n    const [sentenceType, setSentenceType] = useRecoilState(SentenceType);\n    const [sentenceList, setSentenceList] = useRecoilState(SentenceList);\n    const content = writingContent.slice(0, -1);\n\n    const [isLoading, setIsLoading] = useState(true); // 초기에 로딩 상태를 설정\n\n    useEffect(() => {\n        setIsLoading(true); // API 요청이 시작될 때 로딩 상태 설정\n\n        SentenceRecomendApi(content, sentenceType)\n            .then((response) => {\n                setSentenceList(response.result);\n                setIsLoading(false); // API 응답 후 로딩 상태 해제\n                console.log(response);\n            })\n            .catch((error) => {\n                setIsLoading(false); // 에러 발생 시도 로딩 상태 해제\n                console.log(error);\n            });\n    }, []);\n\n    const onClickOption = (e) => {\n        // if(sentenceList.length === 0) {\n        //     setSentence('');\n        //     setIsOptionSelected(false);\n        //     return;\n        // }\n        // const option = e.target.innerText;\n        // setSentence(option);\n        // setIsOptionSelected(false);\n        setSentence(e.target.innerText);\n        setIsOptionSelected(false);\n    };\n\n    const onClickSelfInput = () => {\n        const option = '';\n        setWritingContent(writingContent.slice(0, -1));\n        setSentence(option);\n        setIsOptionSelected(false);\n    }\n\n    const onClickReload = () => {\n        setIsLoading(true); // API 요청이 시작될 때 로딩 상태 설정\n\n        SentenceRecomendApi(content, sentenceType)\n            .then((response) => {\n                setSentenceList(response.result);\n                setIsLoading(false); // API 응답 후 로딩 상태 해제\n                console.log(response);\n            })\n            .catch((error) => {\n                setIsLoading(false); // 에러 발생 시도 로딩 상태 해제\n                console.log(error);\n            });\n    }\n\n    return (\n        <ModalWrapper coordinates={coordinates}>\n            <ModalTitle>\n                <Title>\n                    GLOT 문장 추천\n                </Title>\n                <Button onClick={onClickReload}>\n                    <Icon src={reload}></Icon>다른 문장 추천\n                </Button>\n            </ModalTitle>\n            <ModalContent>\n                {isLoading ? ( // 로딩 중일 때 로딩 메시지 또는 스피너를 표시\n                    <LoadingMessage>Loading...</LoadingMessage>\n                ) : (\n                    sentenceList && sentenceList.length > 0 && sentenceList.map((sentence, index) => (\n                        <SelectContent key={index} onClick={onClickOption}>\n                            <SelectDescription>{sentence}</SelectDescription>\n                        </SelectContent>\n                    ))\n                )}\n                <SelfInput onClick={onClickSelfInput}>\n                    <SelfInputBox>\n                        직접 입력하기\n                    </SelfInputBox>\n                </SelfInput>\n            </ModalContent>\n        </ModalWrapper>\n    );\n};\n\n\nconst ModalWrapper = styled.div`\n    position: absolute;\n    top: ${props => props.coordinates.y}px;\n    left: ${props => props.coordinates.x}px;\n    width: 423px;\n    background-color: #FFFFFF;\n    box-shadow: 0px 2px 14px 0px rgba(70, 71, 57, 0.12);\n    border-radius: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center; \n`;\n\nconst ModalTitle = styled.div`\n    width: calc(100% - 32px);\n    height: 8px;\n    padding: 16px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid rgba(242, 243, 245, 1);\n`;\n\nconst Title = styled.div`\n    font-size: 14px;\n    font-weight: 600;\n    color: #33B864;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Button = styled.button`\n    border: none;\n    background-color: #FFFFFF;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 14px;\n    font-weight: 500;\n    color: #B7B8BA;\n    margin-left: 10px;\n    cursor: pointer;\n`;\n\nconst Icon = styled.img`\n    width: 12.19px;\n    height: 12.19px;\n    margin-right: 5px;\n`;\n\nconst ModalContent = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst SelectContent = styled.div`\n    width: calc(100% - 32px);\n    border-bottom: 1px solid rgba(242, 243, 245, 1);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: left;\n    padding: 16px;\n    &:hover {\n        background: rgba(242, 243, 245, 1);\n    }\n`;\n\nconst SelectDescription = styled.div`\n    font-size: 13px;\n    font-weight: 400;\n    color: rgba(17, 17, 17, 1);\n    margin-top: 5px;\n`;\n\nconst SelfInput = styled.div`\n    width: 100%;\n    height: 44px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst SelfInputBox = styled.div`\n    width: calc(100% - 32px);\n    height: calc(100% - 32px);\n    padding: 16px;\n    border: none;\n    display: flex;\n    justify-content: left;\n    align-items: center;\n    font-size: 13px;\n    font-weight: 400;\n    color: rgba(17, 17, 17, 1);\n    cursor: pointer;\n    &:hover {\n        background: rgba(242, 243, 245, 1);\n    }\n`;\n\nconst LoadingMessage = styled.div`\n    font-size: 18px;\n    font-weight: 500;\n    color: #33B864;\n    padding: 20px;\n`;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}