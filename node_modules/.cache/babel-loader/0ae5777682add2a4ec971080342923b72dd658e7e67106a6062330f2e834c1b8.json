{"ast":null,"code":"var _jsxFileName = \"/Users/namseonghun/Desktop/git/GitHub/glot-frontend/src/pages/Writing/Writing.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport domtoimage from 'dom-to-image';\nimport { saveAs } from 'file-saver';\nimport { useReactToPrint } from 'react-to-print';\nimport getCaretCoordinates from 'textarea-caret';\nimport { useRecoilState } from 'recoil';\nimport { LoginState, WritingTitle, WritingContent, WritingId, Sentence, SentenceList, SentenceType, UserType } from '../../recoil/Atom';\nimport Header from '../../components/Header';\nimport SideBar from '../../components/Writing/SideBar';\nimport Backdrop from '../../components/Modal/Backdrop';\nimport OptionModal from '../../components/Modal/WritingOptionModal';\nimport ExampleModal from '../../components/Modal/WritingExampleModal';\nimport VersionNotice from '../../components/Modal/VersionNoticeModal';\nimport WarningModal from '../../components/Modal/WritingSaveNoticeModal';\nimport WritingSaveApi from '../../services/WritingSave';\nimport WritingDetailApi from '../../services/WritingDetail';\nimport WritingListApi from '../../services/WritingList';\nimport open from '../../asset/open.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Writing() {\n  _s();\n  const [isSideBarOpen, setIsSideBarOpen] = useState(true); // 사이드바 제어\n  const [sidebarHeight, setSidebarHeight] = useState(0); // 사이드바 높이\n  const [contentInputHeight, setContentInputHeight] = useState(0); // 작문 내용 높이\n  const [showSaveNoticeModal, setShowSaveNoticeModal] = useState(false); // 작문 저장 여부(모달창 제어)\n  const [isSlashTyped, setIsSlashTyped] = useState(false); // '/' 문자 입력 여부(모달창 제어)\n  const [isVersionNotified, setIsVersionNotified] = useState(false); // 버전 업데이트 알림 여부(모달창 제어)\n  const [selectOption, setSelectOption] = useRecoilState(SentenceType); // 선택한 작문 옵션\n  const [isOptionSelected, setIsOptionSelected] = useState(false); // 작문 옵션 선택 여부(모달창 제어)\n  const [selectOptionExample, setSelectOptionExample] = useRecoilState(SentenceList); // 선택한 작문 옵션의 예시 문장 배열\n  const [selectSentence, setSelectSentence] = useRecoilState(Sentence); // 선택한 작문 옵션의 예시 문장\n  const [writingTitle, setWritingTitle] = useRecoilState(WritingTitle); // 작문 제목\n  const [writingContent, setWritingContent] = useRecoilState(WritingContent); // 작문 내용\n  const [writingId, setWritingId] = useRecoilState(WritingId); // 작문 고유 id\n  const [writingList, setWritingList] = useState([]); // 작문 리스트\n  const [writingListUpdate, setWritingListUpdate] = useState(false); // 사이드바 작문 리스트 업데이트\n  const [coordinates, setCoordinates] = useState({\n    x: 0,\n    y: 0\n  }); // '/' 문자의 위치\n  const [userType, setUserType] = useRecoilState(UserType); // 유저 타입\n\n  const writingAreaRef = useRef(null);\n  const openSideBar = () => {\n    setIsSideBarOpen(true);\n  };\n\n  //작문보드 전체 조회(리스트)\n  useEffect(() => {\n    WritingListApi().then(response => {\n      setWritingList(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [writingListUpdate]);\n\n  // 화면 크기가 변경될 때 사이드바 상태 업데이트\n  useEffect(() => {\n    if (userType !== 'FREE') {\n      setShowSaveNoticeModal(true);\n    }\n\n    // 화면 크기가 변경될 때 사이드바 상태 업데이트\n    const handleResize = () => {\n      if (window.innerWidth < 900) {\n        setIsSideBarOpen(false);\n      } else {\n        setIsSideBarOpen(true);\n      }\n    };\n\n    // 초기 로드 시 한 번 실행\n    handleResize();\n\n    // resize 이벤트 리스너 등록\n    window.addEventListener('resize', handleResize);\n\n    // 컴포넌트 언마운트 시 이벤트 리스너 제거\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  //작문보드 단건 조회(제목,내용)\n  useEffect(() => {\n    if (writingId) {\n      WritingDetailApi(writingId).then(response => {\n        setWritingTitle(response.title);\n        setWritingContent(response.content);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [writingId]);\n  useEffect(() => {\n    setSidebarHeight(contentInputHeight + 213);\n  }, [contentInputHeight]);\n\n  // ContentInput애서 caret의 위치를 알아내는 함수\n  const handleContentChange = e => {\n    setWritingContent(e.target.value);\n    if (e.target.value === '/') {\n      setIsSlashTyped(false);\n    } else if (e.target.value.endsWith('/')) {\n      setIsSlashTyped(true);\n      // Get caret coordinates on content change\n      const textarea = document.getElementById('writing');\n      const caretPos = getCaretCoordinates(textarea, textarea.selectionEnd);\n      // Get the coordinates of the writing area\n      const writingAreaCoordinates = writingAreaRef.current.getBoundingClientRect();\n      setCoordinates({\n        x: caretPos.left + writingAreaCoordinates.left + 40,\n        y: caretPos.top + writingAreaCoordinates.top + 130\n      });\n    } else {\n      setIsSlashTyped(false);\n    }\n  };\n\n  // ContentInput의 높이를 자동으로 조절하는 함수\n  const handleTextAreaResize = e => {\n    const textarea = e.target;\n    textarea.style.height = 'auto';\n    textarea.style.height = `${textarea.scrollHeight}px`;\n    setContentInputHeight(textarea.scrollHeight);\n  };\n\n  // 작문 옵션 선택 시 작문 내용에 추가\n  useEffect(() => {\n    // 작문 내용에서 마지막의 '/' 문자를 제거\n    const updatedContent = writingContent.endsWith('/') ? writingContent.slice(0, -1) : writingContent;\n    // 선택한 옵션 문장을 추가\n    const newContent = updatedContent + ' ' + selectSentence;\n    setWritingContent(newContent);\n    setSelectOption('');\n    setSelectOptionExample('');\n    setSelectSentence('');\n  }, [selectSentence]);\n\n  // 작문 내용이 500자 이상일 때 버전 업데이트 알림\n  useEffect(() => {\n    if (userType === 'FREE') {\n      const newContent = writingContent;\n      const byteCount = new TextEncoder().encode(newContent).length;\n      if (byteCount > 500) {\n        setIsVersionNotified(true);\n      }\n    }\n    if (writingContent.trim() !== '' || writingTitle.trim() !== '') {\n      const preventClose = e => {\n        e.preventDefault();\n        e.returnValue = '';\n      };\n      window.addEventListener('beforeunload', preventClose);\n      return () => {\n        window.removeEventListener('beforeunload', preventClose);\n      };\n    }\n  }, [writingContent]);\n\n  //jpg로 저장\n  const onClickSaveAsJpg = () => {\n    domtoimage.toBlob(document.querySelector('#writing')).then(blob => {\n      saveAs(blob, `${writingTitle}.jpg`);\n    });\n  };\n\n  //인쇄\n  const onClickPrint = useReactToPrint({\n    content: () => writingAreaRef.current,\n    documentTitle: `${writingTitle}`,\n    pageStyle: `\n            @page {\n                size: A4;\n                margin: 20;\n            }\n            @media print {\n                body {\n                    margin: 0;\n                }\n            }\n        `\n  });\n\n  // 작문 저장\n  const onClickSave = () => {\n    if (writingTitle || writingContent) {\n      if (!writingId) {\n        // if(writingTitle === '') {\n        //     const temptTitle = dayjs().format('YYYYMMDDHHmmss');\n        //     setWritingTitle(temptTitle);\n        // }\n        // 작문을 처음 저장하는 경우 writingId가 없으므로 빈 문자열을 전달\n        WritingSaveApi(writingId, writingTitle, writingContent).then(response => {\n          setWritingId(response.data); // 저장하면 작문 고유 id를 받아옴\n          setWritingListUpdate(!writingListUpdate); // 사이드바 작문 리스트 업데이트\n          alert('작문이 저장되었습니다.');\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        // 작문을 수정하는 경우\n        WritingSaveApi(writingId, writingTitle, writingContent).then(response => {\n          setWritingListUpdate(!writingListUpdate); // 사이드바 작문 리스트 업데이트\n          alert('수정이 완료되었습니다.');\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this), isSideBarOpen ? /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {\n        isSideBarOpen: isSideBarOpen,\n        setIsSideBarOpen: setIsSideBarOpen,\n        sidebarHeight: sidebarHeight,\n        writingList: writingList,\n        setWritingList: setWritingList,\n        writingListUpdate: writingListUpdate,\n        setWritingListUpdate: setWritingListUpdate,\n        onClickPrint: onClickPrint,\n        onClickSaveAsJpg: onClickSaveAsJpg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InnerContainer, {\n        isSideBarOpen: isSideBarOpen,\n        children: [/*#__PURE__*/_jsxDEV(WritingArea, {\n          isSideBarOpen: isSideBarOpen,\n          ref: writingAreaRef,\n          userType: userType,\n          id: \"writing\",\n          children: [/*#__PURE__*/_jsxDEV(TitleArea, {\n            children: /*#__PURE__*/_jsxDEV(TitleInput, {\n              type: \"text\",\n              placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: writingTitle,\n              onChange: e => setWritingTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ContentArea, {\n            children: /*#__PURE__*/_jsxDEV(ContentInput, {\n              placeholder: \"\\uBB38\\uC7A5\\uC744 \\uC785\\uB825\\uD558\\uC5EC \\uC791\\uBB38\\uC744 \\uC2DC\\uC791\\uD574\\uBCF4\\uC138\\uC694!\",\n              value: writingContent,\n              onChange: handleContentChange,\n              onInput: handleTextAreaResize,\n              disabled: isVersionNotified\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ButtonArea, {\n          userType: userType,\n          children: /*#__PURE__*/_jsxDEV(SaveButton, {\n            onClick: onClickSave,\n            children: \"\\uC800\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(InnerContainer, {\n        isSideBarOpen: isSideBarOpen,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: openSideBar,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: open,\n            alt: \"open\",\n            style: {\n              width: '14px',\n              height: '14px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(WritingArea, {\n          isSideBarOpen: isSideBarOpen,\n          userType: userType,\n          id: \"writing\",\n          children: [/*#__PURE__*/_jsxDEV(TitleArea, {\n            children: /*#__PURE__*/_jsxDEV(TitleInput, {\n              type: \"text\",\n              placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: writingTitle,\n              onChange: e => setWritingTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ContentArea, {\n            ref: writingAreaRef,\n            children: /*#__PURE__*/_jsxDEV(ContentInput, {\n              placeholder: \"\\uBB38\\uC7A5\\uC744 \\uC785\\uB825\\uD558\\uC5EC \\uC791\\uBB38\\uC744 \\uC2DC\\uC791\\uD574\\uBCF4\\uC138\\uC694!\",\n              value: writingContent,\n              onChange: handleContentChange,\n              onInput: handleTextAreaResize,\n              disabled: isVersionNotified\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ButtonArea, {\n          userType: userType,\n          children: /*#__PURE__*/_jsxDEV(SaveButton, {\n            onClick: onClickSave,\n            children: \"\\uC800\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }, this), isSlashTyped && /*#__PURE__*/_jsxDEV(OptionModal, {\n      setIsSlashTyped: setIsSlashTyped,\n      setIsOptionSelected: setIsOptionSelected,\n      coordinates: coordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 31\n    }, this), isOptionSelected && /*#__PURE__*/_jsxDEV(ExampleModal, {\n      setIsSlashTyped: setIsSlashTyped,\n      setIsOptionSelected: setIsOptionSelected,\n      writingContent: writingContent,\n      setWritingContent: setWritingContent,\n      coordinates: coordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 35\n    }, this), isVersionNotified && /*#__PURE__*/_jsxDEV(VersionNotice, {\n      setIsVersionNotified: setIsVersionNotified\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 36\n    }, this), isVersionNotified && /*#__PURE__*/_jsxDEV(Backdrop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 36\n    }, this), showSaveNoticeModal && /*#__PURE__*/_jsxDEV(WarningModal, {\n      setShowSaveNoticeModal: setShowSaveNoticeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 9\n  }, this);\n}\n_s(Writing, \"PRHHEAa9Lfd2UVnLch9AqgXaRkw=\", false, function () {\n  return [useRecoilState, useRecoilState, useRecoilState, useRecoilState, useRecoilState, useRecoilState, useRecoilState, useReactToPrint];\n});\n_c = Writing;\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n    min-height: 100vh;\n    background-color: #F2F3F5;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n_c2 = Container;\nconst Content = styled.div`\n    width: 100%;\n    height: calc(100% - 80px); /* 80은 헤더의 높이 */\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n`;\n_c3 = Content;\nconst InnerContainer = styled.div`\n    width: ${props => props.isSideBarOpen ? 'calc(100% - 230px)' : '100%'};\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: #f2f3f5;\n`;\n_c4 = InnerContainer;\nconst Button = styled.button`\n    width: 30px;\n    height: 30px;\n    position: absolute;\n    left: 10px;\n    top: 74px;\n    border-radius: 50%;\n    border: none;\n    font-size: 20px;\n    cursor: pointer;\n    margin-top: 20px;\n    background-color: #F2F4F5;\n    &:hover {\n        background-color: #E5E7E9;\n    }\n`;\n_c5 = Button;\nconst WritingArea = styled.div`\n    width: 598px;\n    height: 100%;\n    min-height: ${props => props.userType === 'FREE' ? 'calc(100vh - 167px)' : 'calc(100vh - 217px)'};\n    flex: 1;\n    background-color: #FFFFFF;\n    border: none;\n    display: flex;\n    flex-direction: column;\n    padding: 48px;\n    padding-bottom: 0px;\n    margin-top: 24px;\n    overflow: auto;\n    animation: 0.3s ease-in-out;\n`;\n_c6 = WritingArea;\nconst TitleArea = styled.div`\n    width: 100%;\n    height: 50px;\n    outline: none;\n    margin-bottom: 20px;\n`;\n_c7 = TitleArea;\nconst TitleInput = styled.input`\n    width: 100%;\n    height: 100%;\n    border: none;\n    outline: none;\n    font-size: 30px;\n    font-weight: 600;\n    &::placeholder {\n        color: rgba(218, 219, 221, 1);\n    }\n`;\n_c8 = TitleInput;\nconst ContentArea = styled.div`\n    width: 100%;\n`;\n_c9 = ContentArea;\nconst ContentInput = styled.textarea`  \n    width: 100%;\n    height: 100%;\n    min-height: calc(100vh - 297px);\n    border: none;\n    outline: none;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 28.8px;\n    white-space: pre-line;\n    resize: none;\n    &::placeholder {\n        color: rgba(218, 219, 221, 1);\n    }\n`;\n_c10 = ContentInput;\nconst ButtonArea = styled.div`\n    width: 694px;\n    height: 60px;\n    background-color: #FFFFFF;\n    border-top: 1px solid rgba(239, 239, 239, 1);\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    display: ${props => props.userType === 'FREE' ? 'none' : 'flex'};\n`;\n_c11 = ButtonArea;\nconst SaveButton = styled.button`\n    width: 101px;\n    height: 40px;\n    border: none;\n    border-radius: 99999px;\n    background-color: rgba(17, 17, 17, 1);\n    color: #FFFFFF;\n    font-size: 16px;\n    font-weight: 600;\n    cursor: pointer;\n`;\n_c12 = SaveButton;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"Writing\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"InnerContainer\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"WritingArea\");\n$RefreshReg$(_c7, \"TitleArea\");\n$RefreshReg$(_c8, \"TitleInput\");\n$RefreshReg$(_c9, \"ContentArea\");\n$RefreshReg$(_c10, \"ContentInput\");\n$RefreshReg$(_c11, \"ButtonArea\");\n$RefreshReg$(_c12, \"SaveButton\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","domtoimage","saveAs","useReactToPrint","getCaretCoordinates","useRecoilState","LoginState","WritingTitle","WritingContent","WritingId","Sentence","SentenceList","SentenceType","UserType","Header","SideBar","Backdrop","OptionModal","ExampleModal","VersionNotice","WarningModal","WritingSaveApi","WritingDetailApi","WritingListApi","open","jsxDEV","_jsxDEV","Writing","_s","isSideBarOpen","setIsSideBarOpen","sidebarHeight","setSidebarHeight","contentInputHeight","setContentInputHeight","showSaveNoticeModal","setShowSaveNoticeModal","isSlashTyped","setIsSlashTyped","isVersionNotified","setIsVersionNotified","selectOption","setSelectOption","isOptionSelected","setIsOptionSelected","selectOptionExample","setSelectOptionExample","selectSentence","setSelectSentence","writingTitle","setWritingTitle","writingContent","setWritingContent","writingId","setWritingId","writingList","setWritingList","writingListUpdate","setWritingListUpdate","coordinates","setCoordinates","x","y","userType","setUserType","writingAreaRef","openSideBar","then","response","catch","error","console","log","handleResize","window","innerWidth","addEventListener","removeEventListener","title","content","handleContentChange","e","target","value","endsWith","textarea","document","getElementById","caretPos","selectionEnd","writingAreaCoordinates","current","getBoundingClientRect","left","top","handleTextAreaResize","style","height","scrollHeight","updatedContent","slice","newContent","byteCount","TextEncoder","encode","length","trim","preventClose","preventDefault","returnValue","onClickSaveAsJpg","toBlob","querySelector","blob","onClickPrint","documentTitle","pageStyle","onClickSave","data","alert","Container","children","fileName","_jsxFileName","lineNumber","columnNumber","Content","InnerContainer","WritingArea","ref","id","TitleArea","TitleInput","type","placeholder","onChange","ContentArea","ContentInput","onInput","disabled","ButtonArea","SaveButton","onClick","Button","src","alt","width","_c","div","_c2","_c3","props","_c4","button","_c5","_c6","_c7","input","_c8","_c9","_c10","_c11","_c12","$RefreshReg$"],"sources":["/Users/namseonghun/Desktop/git/GitHub/glot-frontend/src/pages/Writing/Writing.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport domtoimage from 'dom-to-image';\nimport { saveAs } from 'file-saver';\nimport { useReactToPrint } from 'react-to-print';\nimport getCaretCoordinates from 'textarea-caret';\n\nimport { useRecoilState } from 'recoil';\nimport { LoginState, WritingTitle, WritingContent, WritingId, Sentence, SentenceList, SentenceType, UserType } from '../../recoil/Atom';\n\nimport Header from '../../components/Header';\nimport SideBar from '../../components/Writing/SideBar';\nimport Backdrop from '../../components/Modal/Backdrop';\nimport OptionModal from '../../components/Modal/WritingOptionModal';\nimport ExampleModal from '../../components/Modal/WritingExampleModal';\nimport VersionNotice from '../../components/Modal/VersionNoticeModal';\nimport WarningModal from '../../components/Modal/WritingSaveNoticeModal';\n\nimport WritingSaveApi from '../../services/WritingSave';\nimport WritingDetailApi from '../../services/WritingDetail';\nimport WritingListApi from '../../services/WritingList';\n\nimport open from '../../asset/open.png';\n\nexport default function Writing() {\n    const [isSideBarOpen, setIsSideBarOpen] = useState(true); // 사이드바 제어\n    const [sidebarHeight, setSidebarHeight] = useState(0); // 사이드바 높이\n    const [contentInputHeight, setContentInputHeight] = useState(0); // 작문 내용 높이\n    const [showSaveNoticeModal, setShowSaveNoticeModal] = useState(false); // 작문 저장 여부(모달창 제어)\n    const [isSlashTyped, setIsSlashTyped] = useState(false); // '/' 문자 입력 여부(모달창 제어)\n    const [isVersionNotified, setIsVersionNotified] = useState(false); // 버전 업데이트 알림 여부(모달창 제어)\n    const [selectOption, setSelectOption] = useRecoilState(SentenceType); // 선택한 작문 옵션\n    const [isOptionSelected, setIsOptionSelected] = useState(false); // 작문 옵션 선택 여부(모달창 제어)\n    const [selectOptionExample, setSelectOptionExample] = useRecoilState(SentenceList); // 선택한 작문 옵션의 예시 문장 배열\n    const [selectSentence, setSelectSentence] = useRecoilState(Sentence); // 선택한 작문 옵션의 예시 문장\n    const [writingTitle, setWritingTitle] = useRecoilState(WritingTitle); // 작문 제목\n    const [writingContent, setWritingContent] = useRecoilState(WritingContent); // 작문 내용\n    const [writingId, setWritingId] = useRecoilState(WritingId); // 작문 고유 id\n    const [writingList, setWritingList] = useState([]) // 작문 리스트\n    const [writingListUpdate, setWritingListUpdate] = useState(false) // 사이드바 작문 리스트 업데이트\n    const [coordinates, setCoordinates] = useState({ x: 0, y: 0 }); // '/' 문자의 위치\n    const [userType, setUserType] = useRecoilState(UserType); // 유저 타입\n\n    const writingAreaRef = useRef(null);\n\n    const openSideBar = () => {\n        setIsSideBarOpen(true);\n    };\n\n    //작문보드 전체 조회(리스트)\n    useEffect(() => {\n        WritingListApi()\n            .then((response) => {\n                setWritingList(response);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, [writingListUpdate]);\n    \n    // 화면 크기가 변경될 때 사이드바 상태 업데이트\n    useEffect(() => {\n        if(userType !== 'FREE') {\n            setShowSaveNoticeModal(true);\n        }\n\n        // 화면 크기가 변경될 때 사이드바 상태 업데이트\n        const handleResize = () => {\n            if (window.innerWidth < 900) {\n                setIsSideBarOpen(false);\n            }\n            else {\n                setIsSideBarOpen(true);\n            }\n        };\n\n        // 초기 로드 시 한 번 실행\n        handleResize();\n\n        // resize 이벤트 리스너 등록\n        window.addEventListener('resize', handleResize);\n\n        // 컴포넌트 언마운트 시 이벤트 리스너 제거\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    //작문보드 단건 조회(제목,내용)\n    useEffect(() => {\n        if (writingId) {\n            WritingDetailApi(writingId)\n                .then((response) => {\n                    setWritingTitle(response.title);\n                    setWritingContent(response.content);\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        }\n    }, [writingId]);\n\n    useEffect(() => {\n        setSidebarHeight(contentInputHeight + 213);\n    }, [contentInputHeight]);\n\n    // ContentInput애서 caret의 위치를 알아내는 함수\n    const handleContentChange = (e) => {\n        setWritingContent(e.target.value);\n        if (e.target.value === '/') {\n            setIsSlashTyped(false);\n        }\n        else if (e.target.value.endsWith('/')) {\n            setIsSlashTyped(true);\n             // Get caret coordinates on content change\n            const textarea = document.getElementById('writing');\n            const caretPos = getCaretCoordinates(textarea, textarea.selectionEnd);\n            // Get the coordinates of the writing area\n            const writingAreaCoordinates = writingAreaRef.current.getBoundingClientRect();\n\n            setCoordinates({\n                x: caretPos.left + writingAreaCoordinates.left + 40,\n                y: caretPos.top + writingAreaCoordinates.top + 130,\n            });\n        }\n        else {\n            setIsSlashTyped(false);\n        }\n    };\n\n    // ContentInput의 높이를 자동으로 조절하는 함수\n    const handleTextAreaResize = (e) => {\n        const textarea = e.target;\n        textarea.style.height = 'auto';\n        textarea.style.height = `${textarea.scrollHeight}px`;\n        setContentInputHeight(textarea.scrollHeight);\n    };\n\n    // 작문 옵션 선택 시 작문 내용에 추가\n    useEffect(() => {\n        // 작문 내용에서 마지막의 '/' 문자를 제거\n        const updatedContent = writingContent.endsWith('/') ? writingContent.slice(0, -1) : writingContent;\n        // 선택한 옵션 문장을 추가\n        const newContent = updatedContent + ' ' + selectSentence;\n        setWritingContent(newContent);\n        setSelectOption('');\n        setSelectOptionExample('');\n        setSelectSentence('');\n    }, [selectSentence]);\n\n\n    // 작문 내용이 500자 이상일 때 버전 업데이트 알림\n    useEffect(() => {\n        if (userType === 'FREE') { \n            const newContent = writingContent;\n            const byteCount = new TextEncoder().encode(newContent).length;\n            if(byteCount > 500) {\n                setIsVersionNotified(true);\n            }\n        }\n\n        if (writingContent.trim() !== '' || writingTitle.trim() !== '') {\n            const preventClose = (e) => {\n                e.preventDefault();\n                e.returnValue = '';\n            };\n    \n            window.addEventListener('beforeunload', preventClose);\n    \n            return () => {\n                window.removeEventListener('beforeunload', preventClose);\n            };\n        }\n    }, [writingContent]);\n\n    //jpg로 저장\n    const onClickSaveAsJpg = () => {\n        domtoimage\n        .toBlob(document.querySelector('#writing'))\n        .then((blob) => {\n            saveAs(blob, `${writingTitle}.jpg`);\n        });\n    };\n\n    //인쇄\n    const onClickPrint = useReactToPrint({\n        content: () => writingAreaRef.current,\n        documentTitle: `${writingTitle}`,\n        pageStyle: `\n            @page {\n                size: A4;\n                margin: 20;\n            }\n            @media print {\n                body {\n                    margin: 0;\n                }\n            }\n        `,\n    });\n\n    // 작문 저장\n    const onClickSave = () => {\n        if(writingTitle || writingContent) {\n            if (!writingId) {\n                // if(writingTitle === '') {\n                //     const temptTitle = dayjs().format('YYYYMMDDHHmmss');\n                //     setWritingTitle(temptTitle);\n                // }\n                // 작문을 처음 저장하는 경우 writingId가 없으므로 빈 문자열을 전달\n                WritingSaveApi(writingId, writingTitle, writingContent)\n                    .then((response) => {\n                        setWritingId(response.data);  // 저장하면 작문 고유 id를 받아옴\n                        setWritingListUpdate(!writingListUpdate); // 사이드바 작문 리스트 업데이트\n                        alert('작문이 저장되었습니다.');\n                    })\n                    .catch((error) => {\n                        console.log(error);\n                    });\n            }\n            else {\n                // 작문을 수정하는 경우\n                WritingSaveApi(writingId, writingTitle, writingContent)\n                    .then((response) => {\n                        setWritingListUpdate(!writingListUpdate); // 사이드바 작문 리스트 업데이트\n                        alert('수정이 완료되었습니다.')\n                    })\n                    .catch((error) => {\n                        console.log(error);\n                    });\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <Header />\n            {isSideBarOpen ? (\n                <Content>\n                    <SideBar\n                        isSideBarOpen={isSideBarOpen}\n                        setIsSideBarOpen={setIsSideBarOpen}\n                        sidebarHeight={sidebarHeight}\n                        writingList={writingList}\n                        setWritingList={setWritingList}\n                        writingListUpdate={writingListUpdate}\n                        setWritingListUpdate={setWritingListUpdate}\n                        onClickPrint={onClickPrint}\n                        onClickSaveAsJpg={onClickSaveAsJpg}\n                    />\n                    <InnerContainer isSideBarOpen={isSideBarOpen}>\n                        <WritingArea isSideBarOpen={isSideBarOpen} ref={writingAreaRef} userType={userType} id='writing'>\n                            <TitleArea>\n                                <TitleInput\n                                    type=\"text\"\n                                    placeholder=\"제목을 입력해주세요\"\n                                    value={writingTitle}\n                                    onChange={(e) => setWritingTitle(e.target.value)}\n                                />\n                            </TitleArea>\n                            <ContentArea>\n                                <ContentInput\n                                    placeholder=\"문장을 입력하여 작문을 시작해보세요!\"\n                                    value={writingContent}\n                                    onChange={handleContentChange}\n                                    onInput={handleTextAreaResize}\n                                    disabled={isVersionNotified}\n                                />\n                            </ContentArea>\n                        </WritingArea>\n                        <ButtonArea\n                            userType={userType}\n                        >\n                            <SaveButton onClick={onClickSave}>저장</SaveButton> \n                        </ButtonArea>\n                    </InnerContainer>\n                </Content>\n            ) : (\n                <Content>\n                    <InnerContainer isSideBarOpen={isSideBarOpen}>\n                        <Button onClick={openSideBar}>\n                            <img \n                                src={open} \n                                alt='open' \n                                style={{\n                                    width: '14px',\n                                    height: '14px',\n                                }}\n                            />\n                        </Button>\n                        <WritingArea isSideBarOpen={isSideBarOpen} userType={userType} id='writing'>\n                            <TitleArea>\n                                <TitleInput\n                                    type=\"text\"\n                                    placeholder=\"제목을 입력해주세요\"\n                                    value={writingTitle}\n                                    onChange={(e) => setWritingTitle(e.target.value)}\n                                />\n                            </TitleArea>\n                            <ContentArea ref={writingAreaRef}>\n                                <ContentInput\n                                    placeholder=\"문장을 입력하여 작문을 시작해보세요!\"\n                                    value={writingContent}\n                                    onChange={handleContentChange}\n                                    onInput={handleTextAreaResize}\n                                    disabled={isVersionNotified}\n                                />\n                            </ContentArea>\n                        </WritingArea>\n                        <ButtonArea\n                            userType={userType}\n                        >\n                            <SaveButton onClick={onClickSave}>저장</SaveButton> \n                        </ButtonArea>\n                    </InnerContainer>\n                </Content>\n            )}\n            {isSlashTyped && (<OptionModal setIsSlashTyped={setIsSlashTyped} setIsOptionSelected={setIsOptionSelected} coordinates={coordinates}/>)}\n            {isOptionSelected && (<ExampleModal setIsSlashTyped={setIsSlashTyped} setIsOptionSelected={setIsOptionSelected} writingContent={writingContent} setWritingContent={setWritingContent} coordinates={coordinates}/>)}\n            {isVersionNotified && (<VersionNotice setIsVersionNotified={setIsVersionNotified}/>)}\n            {isVersionNotified && (<Backdrop />)}\n            {showSaveNoticeModal && (<WarningModal setShowSaveNoticeModal={setShowSaveNoticeModal}/>)}\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n    min-height: 100vh;\n    background-color: #F2F3F5;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst Content = styled.div`\n    width: 100%;\n    height: calc(100% - 80px); /* 80은 헤더의 높이 */\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n`;\n\nconst InnerContainer = styled.div`\n    width: ${props => (props.isSideBarOpen ? 'calc(100% - 230px)' : '100%')};\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: #f2f3f5;\n`;\n\nconst Button = styled.button`\n    width: 30px;\n    height: 30px;\n    position: absolute;\n    left: 10px;\n    top: 74px;\n    border-radius: 50%;\n    border: none;\n    font-size: 20px;\n    cursor: pointer;\n    margin-top: 20px;\n    background-color: #F2F4F5;\n    &:hover {\n        background-color: #E5E7E9;\n    }\n`;\n\nconst WritingArea = styled.div`\n    width: 598px;\n    height: 100%;\n    min-height: ${props => (props.userType) === 'FREE' ? 'calc(100vh - 167px)' : 'calc(100vh - 217px)'};\n    flex: 1;\n    background-color: #FFFFFF;\n    border: none;\n    display: flex;\n    flex-direction: column;\n    padding: 48px;\n    padding-bottom: 0px;\n    margin-top: 24px;\n    overflow: auto;\n    animation: 0.3s ease-in-out;\n`;\n\nconst TitleArea = styled.div`\n    width: 100%;\n    height: 50px;\n    outline: none;\n    margin-bottom: 20px;\n`;\n\nconst TitleInput = styled.input`\n    width: 100%;\n    height: 100%;\n    border: none;\n    outline: none;\n    font-size: 30px;\n    font-weight: 600;\n    &::placeholder {\n        color: rgba(218, 219, 221, 1);\n    }\n`;\n\nconst ContentArea = styled.div`\n    width: 100%;\n`; \n\nconst ContentInput = styled.textarea`  \n    width: 100%;\n    height: 100%;\n    min-height: calc(100vh - 297px);\n    border: none;\n    outline: none;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 28.8px;\n    white-space: pre-line;\n    resize: none;\n    &::placeholder {\n        color: rgba(218, 219, 221, 1);\n    }\n`;\n\n\nconst ButtonArea = styled.div`\n    width: 694px;\n    height: 60px;\n    background-color: #FFFFFF;\n    border-top: 1px solid rgba(239, 239, 239, 1);\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    display: ${props => (props.userType === 'FREE' ? 'none' : 'flex')};\n`;\n\nconst SaveButton = styled.button`\n    width: 101px;\n    height: 40px;\n    border: none;\n    border-radius: 99999px;\n    background-color: rgba(17, 17, 17, 1);\n    color: #FFFFFF;\n    font-size: 16px;\n    font-weight: 600;\n    cursor: pointer;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}